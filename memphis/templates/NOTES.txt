
 __  __                      _     _     
|  \/  | ___ _ __ ___  _ __ | |__ (_)___ 
| |\/| |/ _ \ '_ ` _ \| '_ \| '_ \| / __|
| |  | |  __/ | | | | | |_) | | | | \__ \
|_|  |_|\___|_| |_| |_| .__/|_| |_|_|___/
                      |_|                

Melvis thank you for installing {{ .Chart.Name }}!
A dev first event-processing platform.

---------------------------------------------------------------------------------------------------------------------------------------------
Memphis UI can be accessed on the following DNS name from within your cluster: memphis-cluster.{{ .Release.Namespace }}.svc.cluster.local:9000                                                                                        

To access Memphis using UI/CLI/SDK from localhost, run the below commands:                                                                                    
  - kubectl port-forward service/memphis-cluster 6666:6666 9000:9000 7770:7770 --namespace {{ .Release.Namespace }} > /dev/null &

For interacting with the broker via HTTP:

  - kubectl port-forward service/memphis-http-proxy 4444:4444 --namespace {{ .Release.Namespace }} > /dev/null &

Dashboard/CLI: http://localhost:9000
Broker: localhost:6666 (Client Connections)
HTTP proxy: localhost:4444 (Data + Mgmt)
                                                             
---------------------------------------------------------------------------------------------------------------------------------------------
Read more about networking options here: https://docs.memphis.dev/deployment/kubernetes

Website: https://memphis.dev
Documentations: https://docs.memphis.dev

Deployment Information
-------------------------
## Secrets ##
UI/CLI/SDK root username        - root
UI/CLI root Password            - kubectl get secret memphis-creds -n {{ .Release.Namespace }} -o jsonpath="{.data.ROOT_PASSWORD}" | base64 --decode
SDK root connection token       - kubectl get secret memphis-creds -n {{ .Release.Namespace }} -o jsonpath="{.data.CONNECTION_TOKEN}" | base64 --decode


## Components ##
Broker - Where data flows through
MongoDB - Internal Database for management
