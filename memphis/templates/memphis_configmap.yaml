---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "memphis.fullname" . }}-config
  namespace: {{ include "memphis.namespace" . }}
  labels:
    {{- include "memphis.labels" . | nindent 4 }}
data:
  memphis.conf: |
    # Memphis Clients Port
    port: {{ .Values.memphis.client.port }}

    # PID file shared with configuration reloader.
    pid_file: "/var/run/memphis/memphis.pid"
    
    # Memphis K8s namespace
    k8s_namespace: {{ include "memphis.namespace" . }}

    # Memphis HTTP/UI Port
    ui_port: {{ .Values.memphis.ui.port }}

    # Memphis Rest Gateway API Port
    rest_gw_port: {{ .Values.restGateway.port }}

    {{- if .Values.ui_host }}
    # Memphis UI URL that displayed in dashboard
    ui_host: {{ .Values.ui_host }}
    {{- end }}

    {{- if .Values.broker_host }}
    # Memphis Broker URL that displayed in dashboard
    broker_host: {{ .Values.broker_host }}
    {{- end }}

    {{- if .Values.rest_gw_host }}
    # Memphis Rest Gateway URL that displayed in dashboard
    rest_gw_host: {{ .Values.rest_gw_host }}
    {{- end }}    

    # Logs retention parameter in days
    logs_retention_days: {{ .Values.logsRetentionInDays }}

    # Tiered storage upload interval in seconds
    tiered_storage_upload_interval_seconds: 8

    # Dead letter station retention
    dls_retention_hours: 3


    {{- if .Values.memphis.config }}
    ###########
    #         #
    # Imports #
    #         #
    ###########
    {{- range .Values.memphis.config }}
    include ./{{ .name }}/{{ .name }}.conf
    {{- end}}
    {{- end }}

    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name: {{- if .Values.memphis.serverNamePrefix  }}$SERVER_NAME{{- else }}$POD_NAME{{- end }}

    {{- if .Values.memphis.tls }}
    #####################
    #                   #
    # TLS Configuration #
    #                   #
    #####################
    {{- with .Values.memphis.tls }}
    {{- $memphis_tls := merge (dict) . }}
    {{- $_ := set $memphis_tls "secretPath" "/etc/memphis-certs/clients" }}
    {{- tpl (include "memphis.tlsConfig" $memphis_tls) $ | nindent 4}}
    {{- end }}
    {{- end }}

    {{- if .Values.memphis.jetstream.enabled }}
    ###################################
    #                                 #
    #            JetStream            #
    #                                 #
    ###################################
    jetstream {
      {{- if .Values.memphis.jetstream.encryption }}
      {{- if .Values.memphis.jetstream.encryption.key }}
      key: {{ .Values.memphis.jetstream.encryption.key | quote }}
      {{- else if .Values.memphis.jetstream.encryption.secret }}
      key: $JS_KEY
      {{- end}}
      {{- end}}

      {{- if .Values.memphis.jetstream.memStorage.enabled }}
      {{- if .Values.memphis.jetstream.memStorage.size }}
      max_mem: {{ .Values.memphis.jetstream.memStorage.size }}
      {{- end }}
      {{- end }}

      {{- if .Values.memphis.jetstream.domain }}
      domain: {{ .Values.memphis.jetstream.domain }}
      {{- end }}

      {{- if .Values.memphis.jetstream.fileStorage.enabled }}
      store_dir: {{ .Values.memphis.jetstream.fileStorage.storageDirectory }}

      max_file:
      {{- if .Values.memphis.jetstream.fileStorage.existingClaim }}
      {{- .Values.memphis.jetstream.fileStorage.claimStorageSize  }}
      {{- else }}
      {{- .Values.memphis.jetstream.fileStorage.size }}
      {{- end }}
      {{- end }}
    }
    {{- end }}
    {{- if .Values.mqtt.enabled }}
    ###################################
    #                                 #
    #               MQTT              #
    #                                 #
    ###################################
    mqtt {
      port: 1883

      {{- with .Values.mqtt.tls }}
      {{-  $mqtt_tls := merge (dict) . }}
      {{- $_ := set $mqtt_tls "secretPath" "/etc/memphis-certs/mqtt" }}
      {{- tpl (include "memphis.tlsConfig" $mqtt_tls) $ | nindent 6}}
      {{- end }}

      {{- if .Values.mqtt.noAuthUser }}
      no_auth_user: {{ .Values.mqtt.noAuthUser | quote }}
      {{- end }}

      ack_wait: {{ .Values.mqtt.ackWait | quote }}
      max_ack_pending: {{ .Values.mqtt.maxAckPending }}
    }
    {{- end }}

    {{- if eq (include "memphis.clusterEnabled" .) "true" }}
    ###################################
    #                                 #
    #     Memphis Clustering Setup    #
    #                                 #
    ###################################
    cluster {
      port: 6222

      {{- if .Values.memphis.jetstream.enabled }}
      {{- if .Values.cluster.name }}
      name: {{ .Values.cluster.name }}
      {{- else }}
      name: {{ template "memphis.name" . }}
      {{- end }}
      {{- else }}
      {{- with .Values.cluster.name }}
      name: {{ . }}
      {{- end }}
      {{- end }}

      {{- with .Values.cluster.tls }}
      {{-  $cluster_tls := merge (dict) . }}
      {{- $_ := set $cluster_tls "secretPath" "/etc/memphis-certs/cluster" }}
      {{- tpl (include "memphis.tlsConfig" $cluster_tls) $ | nindent 6}}
      {{- end }}

      {{- if .Values.cluster.authorization }}
      authorization {
        {{- with .Values.cluster.authorization.user }}
        user: {{ . }}
        {{- end }}
        {{- with .Values.cluster.authorization.password }}
        password: {{ . }}
        {{- end }}
        {{- with .Values.cluster.authorization.timeout }}
        timeout: {{ . }}
        {{- end }}
      }
      {{- end }}

      routes = [
        {{ include "memphis.clusterRoutes" . }}
        {{ include "memphis.extraRoutes" . }}
      ]
      cluster_advertise: $CLUSTER_ADVERTISE

      {{- with .Values.cluster.noAdvertise }}
      no_advertise: {{ . }}
      {{- end }}

      connect_retries: {{ .Values.memphis.connectRetries }}
    }
    {{- end }}

    {{- if and .Values.memphis.advertise .Values.memphis.externalAccess }}
    include "advertise/client_advertise.conf"
    {{- end }}

    {{- if or .Values.leafnodes.enabled .Values.leafnodes.remotes }}
    ####################
    #                  #
    # Memphis Leafnode #
    #                  #
    ####################
    leafnodes {
      {{- if .Values.leafnodes.enabled }}
      listen: "0.0.0.0:7422"
      {{- end }}

      {{- if and .Values.memphis.advertise .Values.memphis.externalAccess }}
      include "advertise/gateway_advertise.conf"
      {{- end }}

      {{- with .Values.leafnodes.noAdvertise }}
      no_advertise: {{ . }}
      {{- end }}

      {{- with .Values.leafnodes.authorization }}
      authorization: {
        {{- with .user }}
        user: {{ . }}
        {{- end }}
        {{- with .password }}
        password: {{ . }}
        {{- end }}
        {{- with .account }}
        account: {{ . | quote }}
        {{- end }}
        {{- with .timeout }}
        timeout: {{ . }}
        {{- end }}
        {{- with .users }}
        users: [
        {{- range . }}
        {{- toRawJson . | nindent 10 }},
        {{- end }}
        ]
        {{- end }}
      }
      {{- end }}

      {{- with .Values.leafnodes.tls }}
      {{- if .custom }}
      tls {
        {{- .custom | nindent 8 }}
      }
      {{- else }}
      {{-  $leafnode_tls := merge (dict) . }}
      {{- $_ := set $leafnode_tls "secretPath" "/etc/memphis-certs/leafnodes" }}
      {{- tpl (include "memphis.tlsConfig" $leafnode_tls) $ | nindent 6}}
      {{- end }}
      {{- end }}

      remotes: [
      {{- range .Values.leafnodes.remotes }}
      {
        {{- with .url }}
        url: {{ . | quote }}
        {{- end }}

        {{- with .urls }}
        urls: {{ toRawJson . }}
        {{- end }}

        {{- with .account }}
        account: {{ . | quote }}
        {{- end }}

        {{- with .credentials }}
        credentials: "/etc/memphis-creds/{{ .secret.name }}/{{ .secret.key }}"
        {{- end }}

        {{- with .tls }}
        tls: {
          {{- if .custom }}
          {{- .custom | nindent 10 }}
          {{- else }}
          {{ $secretName := tpl .secret.name $ }}
          {{- with .cert }}
          cert_file: /etc/memphis-certs/leafnodes/{{ $secretName }}/{{ . }}
          {{- end }}

          {{- with .key }}
          key_file: /etc/memphis-certs/leafnodes/{{ $secretName }}/{{ . }}
          {{- end }}

          {{- with .ca }}
          ca_file: /etc/memphis-certs/leafnodes/{{ $secretName }}/{{ . }}
          {{- end }}
          {{- end }}
        }
        {{- end }}
      }
      {{- end }}
      ]
    }
    {{- end }}

    {{- if .Values.gateway.enabled }}
    ####################
    #                  #
    # Memphis Gateways #
    #                  #
    ####################
    gateway {
      name: {{ .Values.gateway.name }}
      port: 7522

      {{- if .Values.gateway.advertise }}
      advertise: {{ .Values.gateway.advertise }}
      {{- end }}

      {{- if .Values.gateway.rejectUnknownCluster }}
      reject_unknown_cluster: {{ .Values.gateway.rejectUnknownCluster }}
      {{- end }}

      {{- if .Values.gateway.authorization }}
      authorization {
        {{- with .Values.gateway.authorization.user }}
        user: {{ . }}
        {{- end }}
        {{- with .Values.gateway.authorization.password }}
        password: {{ . }}
        {{- end }}
        {{- with .Values.gateway.authorization.timeout }}
        timeout: {{ . }}
        {{- end }}
      }
      {{- end }}

      {{- if and .Values.memphis.advertise .Values.memphis.externalAccess }}
      include "advertise/gateway_advertise.conf"
      {{- end }}

      {{- with .Values.gateway.tls }}
      {{-  $gateway_tls := merge (dict) . }}
      {{- $_ := set $gateway_tls "secretPath" "/etc/memphis-certs/gateways" }}
      {{- tpl (include "memphis.tlsConfig" $gateway_tls) $ | nindent 6}}
      {{- end }}

      # Gateways array here
      gateways: [
        {{- range .Values.gateway.gateways }}
        {
          {{- with .name }}
          name: {{ . }}
          {{- end }}

          {{- with .url }}
          url: {{ . | quote }}
          {{- end }}

          {{- with .urls }}
          urls: [{{ join "," . }}]
          {{- end }}
        },
        {{- end }}
      ]
    }
    {{- end }}

    {{- with .Values.memphis.logging.debug }}
    debug: {{ . }}
    {{- end }}

    {{- with .Values.memphis.logging.trace }}
    trace:  {{ . }}
    {{- end }}

    {{- with .Values.memphis.logging.logtime }}
    logtime: {{ . }}
    {{- end }}

    {{- with .Values.memphis.logging.connectErrorReports }}
    connect_error_reports: {{ . }}
    {{- end }}

    {{- with .Values.memphis.logging.reconnectErrorReports }}
    reconnect_error_reports: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.maxConnections }}
    max_connections: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.maxSubscriptions }}
    max_subscriptions: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.maxPending }}
    max_pending: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.maxControlLine }}
    max_control_line: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.maxPayload }}
    max_payload: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.pingInterval }}
    ping_interval: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.maxPings }}
    ping_max: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.writeDeadline }}
    write_deadline: {{ . }}
    {{- end }}

    {{- with .Values.memphis.limits.lameDuckDuration }}
    lame_duck_duration: {{ . }}
    {{- end }}

    {{- if .Values.websocket.enabled }}
    ##################
    #                #
    # Websocket      #
    #                #
    ##################
    websocket {
      port: {{ .Values.websocket.port }}
      {{- with .Values.websocket.tls }}
        {{ $secretName := tpl .secret.name $ }}
      tls {
        {{- with .cert }}
        cert_file: /etc/memphis-certs/ws/{{ $secretName }}/{{ . }}
        {{- end }}

        {{- with .key }}
        key_file: /etc/memphis-certs/ws/{{ $secretName }}/{{ . }}
        {{- end }}

        {{- with .ca }}
        ca_file: /etc/memphis-certs/ws/{{ $secretName }}/{{ . }}
        {{- end }}
      }
      {{- else }}
      no_tls: {{ .Values.websocket.noTLS }}
      {{- end }}
      same_origin: {{ .Values.websocket.sameOrigin }}
      {{- with .Values.websocket.allowedOrigins }}
      allowed_origins: {{ toRawJson . }}
      {{- end }}
      
      {{- with .Values.websocket.auth }}
      authorization {
        {{- if .token }}
        token: {{ .token | quote }}
        {{- else }}
        user: {{ .user | quote }}
        pass: {{ .pass | quote }}
        {{- end }}
      {{- if .timeout }}
        timeout: {{ .timeout }}
      {{- end }}
      }
    {{- end }}
    }
    {{- end }}

    {{- if .Values.auth.enabled }}
    ##################
    #                #
    # Authorization  #
    #                #
    ##################
    {{- if .Values.auth.resolver }}
      {{- if eq .Values.auth.resolver.type "memory" }}
        resolver: MEMORY
        include "accounts/{{ .Values.auth.resolver.configMap.key }}"
      {{- end }}

      {{- if eq .Values.auth.resolver.type "full" }}
        {{- if .Values.auth.resolver.configMap }}
        include "accounts/{{ .Values.auth.resolver.configMap.key }}"
        {{- else }}
          {{- with .Values.auth.resolver }}
            {{- if $.Values.auth.timeout }}
            authorization {
              timeout: {{ $.Values.auth.timeout }}
             }
            {{- end }}

            {{- if .operator }}
            operator: {{ .operator }}
            {{- end }}

            {{- if .systemAccount }}
            system_account: {{ .systemAccount | quote }}
            {{- end }}
          {{- end }}

          resolver: {
            type: full
            {{- with .Values.auth.resolver }}
            dir: {{ .store.dir | quote }}

            allow_delete: {{ .allowDelete }}

            interval: {{ .interval | quote }}
            {{- end }}
          }
        {{- end }}
      {{- end }}

      {{- if .Values.auth.resolver.resolverPreload }}
      resolver_preload: {{ toRawJson .Values.auth.resolver.resolverPreload }}
      {{- end }}

      {{- if eq .Values.auth.resolver.type "URL" }}
        {{- with .Values.auth.resolver.url }}
        resolver: URL({{ . }})
        {{- end }}
        operator: /etc/memphis-config/operator/{{ .Values.auth.operatorjwt.configMap.key }}
      {{- end }}
    {{- end }}

    {{- with .Values.auth.systemAccount }}
    system_account: {{ . | quote }}
    {{- end }}


    {{- with .Values.auth.nkeys }}
    {{- with .users }}
    authorization {
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}

      users: [
      {{- range . }}
      {{- toRawJson . | nindent 4 }},
      {{- end }}
      ]
    }
    {{- end }}
    {{- end }}

    {{- with .Values.auth.basic }}

    {{- with .noAuthUser }}
    no_auth_user: {{ . }}
    {{- end }}

    {{- with .users }}
    authorization {
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}

      users: [
      {{- range . }}
      {{- toRawJson . | nindent 4 }},
      {{- end }}
      ]
    }
    {{- end }}

    {{- with .accounts }}
    authorization {
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}
    }

    accounts: {{- toRawJson . }}
    {{- end }}

    {{- end }}

    {{- end }}
